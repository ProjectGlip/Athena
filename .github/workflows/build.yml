name: build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    - name: Setup JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Setup Ninja
      uses: lukka/get-cmake@latest

    # - name: Write key
    #  run: |
    #      if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
    #      echo androidStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties
    #      echo androidKeyAlias='${{ secrets.ALIAS }}' >> gradle.properties
    #      echo androidKeyPassword='${{ secrets.KEY_PASSWORD }}' >> gradle.properties
    #      echo androidStoreFile='key.jks' >> gradle.properties
    #      echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks
    #      fi

    - name: Build with Gradle
      run: ./gradlew assembleDebug

    - name: Setup build tool version variable
      shell: bash
      run: |
        BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
        echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
        echo Last build tool version is: $BUILD_TOOL_VERSION

    - name: Sign Apk
      continue-on-error: true
      id: sign_apk
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/debug
        signingKeyBase64: ${{ secrets.KEY_BASE64 }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTORE_PASS }}
        keyPassword: ${{ secrets.KEYSTORE_PASS }}
      env:
        BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

    - name: Remove file that aren't signed
      continue-on-error: true
      run: |
        ls | grep 'signed\.apk$' && find . -type f -name '*.apk' ! -name '*-signed.apk' -delete

    - uses: actions/upload-artifact@v2
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/*.apk
        
#    - name: Create release
#      uses: marvinpinto/action-automatic-releases@latest
#      if: github.ref == 'refs/heads/master'
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        automatic_release_tag: "latest"
#        prerelease: false
#        title: ${{ github.sha }}
#        files: |
#          app/build/outputs/apk/debug/app-debug.apk
